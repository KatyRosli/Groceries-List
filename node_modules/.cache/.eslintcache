[{"/Users/katyrosli/Documents/GitHub/Groceries-List/src/index.tsx":"1","/Users/katyrosli/Documents/GitHub/Groceries-List/src/reportWebVitals.ts":"2","/Users/katyrosli/Documents/GitHub/Groceries-List/src/App.tsx":"3","/Users/katyrosli/Documents/GitHub/Groceries-List/src/Components/GrogeriesList.tsx":"4"},{"size":532,"mtime":1652717528536,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1652717306199,"results":"7","hashOfConfig":"6"},{"size":1634,"mtime":1652802807745,"results":"8","hashOfConfig":"6"},{"size":510,"mtime":1652802838757,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zeyadl",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/katyrosli/Documents/GitHub/Groceries-List/src/index.tsx",[],[],"/Users/katyrosli/Documents/GitHub/Groceries-List/src/reportWebVitals.ts",[],[],"/Users/katyrosli/Documents/GitHub/Groceries-List/src/App.tsx",["24"],[],"import React, {FC, ChangeEvent, useState} from 'react';\nimport './App.css';\nimport GroceriesList from './Components/GrogeriesList';\nimport {IList} from './Interfaces'\n\nconst App : FC = () => {\n\n  const [list, setList] = useState<string>(\"\");\n  const [quantity, setQuantity] = useState<number>(0);\n  const [groceriesList, setGroceriesList] = useState<IList[]>([]);\n\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n  if (event.target.name === \"list\") {\n    setList(event.target.value);\n  } else {\n    setQuantity(Number(event.target.value));\n  }\n  };\n\n  const addList = (): void => {\n    const newList = {listName: list, quantity: quantity };\n    setGroceriesList([...groceriesList, newList]);\n    setList(\"\");\n    setQuantity(0);\n  };\n\n  const completeList = (listNameToDelete: string): void => {\n    setGroceriesList(groceriesList.filter((list) => {\n    return list.listName != listNameToDelete;\n    })\n    );\n  };\n  \n  return ( \n  <div className=\"App\">\n    <div className=\"header\">\n      <div className=\"inputContainer\">\n      <input \n      type=\"text\" \n      placeholder=\"List...\" \n      name=\"list\" \n      value={list}\n      onChange={handleChange}/>\n      <input \n      type=\"number\" \n      placeholder=\"Quantity...\" \n      name=\"quantity\" \n      value={quantity}\n      onChange={handleChange}/>\n      </div>\n      <button onClick={addList}>Add List</button>\n    </div>\n    <div className=\"GrogeriesList\">\n      {groceriesList.map((list: IList, key: number) => {\n      return <GroceriesList key={key} list={list} completeList={completeList}/>;\n      })}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/katyrosli/Documents/GitHub/Groceries-List/src/Components/GrogeriesList.tsx",[],[],{"ruleId":"25","severity":1,"message":"26","line":30,"column":26,"nodeType":"27","messageId":"28","endLine":30,"endColumn":28},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]